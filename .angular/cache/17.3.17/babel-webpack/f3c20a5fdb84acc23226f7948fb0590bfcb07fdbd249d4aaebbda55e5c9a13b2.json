{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../rx.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction RxInteractionsComponent_table_8_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const r_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(r_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(r_r1.severity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(r_r1.description);\n  }\n}\nfunction RxInteractionsComponent_table_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\")(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Drug\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Severity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Description\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"tbody\");\n    i0.ɵɵtemplate(10, RxInteractionsComponent_table_8_tr_10_Template, 7, 3, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.rows);\n  }\n}\nfunction RxInteractionsComponent_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.msg);\n  }\n}\nexport class RxInteractionsComponent {\n  constructor(rx) {\n    this.rx = rx;\n    this.rxcui = '341248';\n    this.loading = false;\n    this.error = '';\n    this.rows = [];\n  }\n  fetch() {\n    this.loading = true;\n    this.error = '';\n    this.rows = [];\n    this.rx.getInteractions(this.rxcui).subscribe({\n      next: data => {\n        try {\n          const groups = data?.interactionTypeGroup ?? [];\n          const rows = [];\n          for (const g of groups) {\n            for (const t of g.interactionType ?? []) {\n              for (const p of t.interactionPair ?? []) {\n                const drugNames = (p.interactionConcept ?? []).map(c => c?.minConceptItem?.name).filter(x => !!x).join(' + ');\n                const desc = p?.description ?? '';\n                rows.push({\n                  drug: drugNames,\n                  description: desc\n                });\n              }\n            }\n          }\n          this.rows = rows;\n        } catch {\n          this.error = 'Unexpected response format';\n        }\n        this.loading = false;\n      },\n      error: err => {\n        this.error = err?.error?.message || 'Failed to load interactions';\n        this.loading = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function RxInteractionsComponent_Factory(t) {\n      return new (t || RxInteractionsComponent)(i0.ɵɵdirectiveInject(i1.RxService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RxInteractionsComponent,\n      selectors: [[\"app-rx-interactions\"]],\n      decls: 10,\n      vars: 3,\n      consts: [[1, \"toolbar\"], [\"placeholder\", \"e.g. 341248\", 3, \"ngModelChange\", \"ngModel\"], [3, \"click\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function RxInteractionsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"RxNav Interaction Demo\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 0)(3, \"label\");\n          i0.ɵɵtext(4, \"rxcui\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"input\", 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function RxInteractionsComponent_Template_input_ngModelChange_5_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.rxcui, $event) || (ctx.rxcui = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function RxInteractionsComponent_Template_button_click_6_listener() {\n            return ctx.load();\n          });\n          i0.ɵɵtext(7, \"Fetch\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(8, RxInteractionsComponent_table_8_Template, 11, 1, \"table\", 3)(9, RxInteractionsComponent_p_9_Template, 2, 1, \"p\", 3);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.rxcui);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.rows.length);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.msg);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\".toolbar[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 12px;\\n  align-items: center;\\n  margin: 12px 0;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcngvcngtaW50ZXJhY3Rpb25zL3J4LWludGVyYWN0aW9ucy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUFTLGFBQUE7RUFBYSxTQUFBO0VBQVMsbUJBQUE7RUFBbUIsY0FBQTtBQUtsRCIsInNvdXJjZXNDb250ZW50IjpbIi50b29sYmFye2Rpc3BsYXk6ZmxleDtnYXA6MTJweDthbGlnbi1pdGVtczpjZW50ZXI7bWFyZ2luOjEycHggMH1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","r_r1","name","severity","description","ɵɵtemplate","RxInteractionsComponent_table_8_tr_10_Template","ɵɵproperty","ctx_r1","rows","msg","RxInteractionsComponent","constructor","rx","rxcui","loading","error","fetch","getInteractions","subscribe","next","data","groups","interactionTypeGroup","g","t","interactionType","p","interactionPair","drugNames","interactionConcept","map","c","minConceptItem","filter","x","join","desc","push","drug","err","message","ɵɵdirectiveInject","i1","RxService","selectors","decls","vars","consts","template","RxInteractionsComponent_Template","rf","ctx","ɵɵtwoWayListener","RxInteractionsComponent_Template_input_ngModelChange_5_listener","$event","ɵɵtwoWayBindingSet","ɵɵlistener","RxInteractionsComponent_Template_button_click_6_listener","load","RxInteractionsComponent_table_8_Template","RxInteractionsComponent_p_9_Template","ɵɵtwoWayProperty","length"],"sources":["D:\\ASSIGNFRONTED\\cmed-prescription\\src\\app\\rx\\rx-interactions\\rx-interactions.component.ts","D:\\ASSIGNFRONTED\\cmed-prescription\\src\\app\\rx\\rx-interactions\\rx-interactions.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { RxService } from '../rx.service';\n\n@Component({\n  selector: 'app-rx-interactions',\n  templateUrl: './rx-interactions.component.html',\n  styleUrls: ['./rx-interactions.component.scss']\n})\nexport class RxInteractionsComponent {\n  rxcui = '341248';\n  loading = false;\n  error = '';\n  rows: { drug: string; description: string }[] = [];\n\n  constructor(private rx: RxService) {}\n\n  fetch() {\n    this.loading = true; this.error = ''; this.rows = [];\n    this.rx.getInteractions(this.rxcui).subscribe({\n      next: (data) => {\n        try {\n          const groups = data?.interactionTypeGroup ?? [];\n          const rows: any[] = [];\n          for (const g of groups) {\n            for (const t of (g.interactionType ?? [])) {\n              for (const p of (t.interactionPair ?? [])) {\n                const drugNames = (p.interactionConcept ?? [])\n                  .map((c: any) => c?.minConceptItem?.name)\n                  .filter((x: any) => !!x)\n                  .join(' + ');\n                const desc = p?.description ?? '';\n                rows.push({ drug: drugNames, description: desc });\n              }\n            }\n          }\n          this.rows = rows;\n        } catch {\n          this.error = 'Unexpected response format';\n        }\n        this.loading = false;\n      },\n      error: (err) => {\n        this.error = err?.error?.message || 'Failed to load interactions';\n        this.loading = false;\n      }\n    });\n  }\n}\n","<h2>RxNav Interaction Demo</h2>\n<div class=\"toolbar\">\n  <label>rxcui</label><input [(ngModel)]=\"rxcui\" placeholder=\"e.g. 341248\">\n  <button (click)=\"load()\">Fetch</button>\n</div>\n<table *ngIf=\"rows.length\">\n  <thead><tr><th>Drug</th><th>Severity</th><th>Description</th></tr></thead>\n  <tbody><tr *ngFor=\"let r of rows\"><td>{{r.name}}</td><td>{{r.severity}}</td><td>{{r.description}}</td></tr></tbody>\n</table>\n<p *ngIf=\"msg\">{{msg}}</p>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}