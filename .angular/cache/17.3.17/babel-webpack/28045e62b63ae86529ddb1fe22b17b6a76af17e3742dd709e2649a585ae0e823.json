{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(fb, auth, router) {\n    this.fb = fb;\n    this.auth = auth;\n    this.router = router;\n    this.loading = false;\n    this.error = '';\n    this.form = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  submit() {\n    if (this.form.invalid) return;\n    this.loading = true;\n    this.error = '';\n    const {\n      username,\n      password\n    } = this.form.value;\n    this.auth.login(username, password).subscribe({\n      next: payload => {\n        // Backend returns: { token: string, username?: string }\n        const token = payload?.token;\n        if (!token) {\n          this.error = 'No token returned from server';\n          this.loading = false;\n          return;\n        }\n        this.auth.saveToken(token);\n        this.router.navigate(['/prescriptions']);\n      },\n      error: err => {\n        this.error = err?.error?.message || 'Invalid credentials';\n        this.loading = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 0,\n      vars: 0,\n      template: function LoginComponent_Template(rf, ctx) {},\n      styles: [\".card[_ngcontent-%COMP%] {\\n  max-width: 360px;\\n  margin: 48px auto;\\n  padding: 24px;\\n  border: 1px solid #ddd;\\n  border-radius: 8px;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-top: 10px;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 8px;\\n  margin-top: 4px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  margin-top: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUFPLGdCQUFBO0VBQWlCLGlCQUFBO0VBQWtCLGFBQUE7RUFBYyxzQkFBQTtFQUF1QixrQkFBQTtBQU0vRTs7QUFMQTtFQUFPLGNBQUE7RUFBZSxnQkFBQTtBQVV0Qjs7QUFWeUM7RUFBTyxXQUFBO0VBQVksWUFBQTtFQUFhLGVBQUE7QUFnQnpFOztBQWZBO0VBQVEsZ0JBQUE7QUFtQlIiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZHsgbWF4LXdpZHRoOjM2MHB4OyBtYXJnaW46NDhweCBhdXRvOyBwYWRkaW5nOjI0cHg7IGJvcmRlcjoxcHggc29saWQgI2RkZDsgYm9yZGVyLXJhZGl1czo4cHg7IH1cbmxhYmVseyBkaXNwbGF5OmJsb2NrOyBtYXJnaW4tdG9wOjEwcHg7IH0gaW5wdXR7IHdpZHRoOjEwMCU7IHBhZGRpbmc6OHB4OyBtYXJnaW4tdG9wOjRweDsgfVxuYnV0dG9ueyBtYXJnaW4tdG9wOjE2cHg7IH1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","LoginComponent","constructor","fb","auth","router","loading","error","form","group","username","required","password","submit","invalid","value","login","subscribe","next","payload","token","saveToken","navigate","err","message","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","selectors","decls","vars","template","LoginComponent_Template","rf","ctx","styles"],"sources":["D:\\ASSIGNFRONTED\\cmed-prescription\\src\\app\\auth\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService, LoginPayload } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  loading = false;\n  error = '';\n\n  form = this.fb.group({\n    username: ['', Validators.required],\n    password: ['', Validators.required],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private auth: AuthService,\n    private router: Router\n  ) {}\n\n  submit() {\n    if (this.form.invalid) return;\n\n    this.loading = true;\n    this.error = '';\n\n    const { username, password } = this.form.value;\n\n    this.auth.login(username!, password!).subscribe({\n      next: (payload: LoginPayload) => {\n        // Backend returns: { token: string, username?: string }\n        const token = payload?.token;\n        if (!token) {\n          this.error = 'No token returned from server';\n          this.loading = false;\n          return;\n        }\n        this.auth.saveToken(token);\n        \n        this.router.navigate(['/prescriptions']);\n      },\n      error: err => {\n        this.error = err?.error?.message || 'Invalid credentials';\n        this.loading = false;\n      }\n    });\n  }\n}\n"],"mappings":"AACA,SAAsBA,UAAU,QAAQ,gBAAgB;;;;;AASxD,OAAM,MAAOC,cAAc;EASzBC,YACUC,EAAe,EACfC,IAAiB,EACjBC,MAAc;IAFd,KAAAF,EAAE,GAAFA,EAAE;IACF,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAC,MAAM,GAANA,MAAM;IAXhB,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,KAAK,GAAG,EAAE;IAEV,KAAAC,IAAI,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MACnBC,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ;KACnC,CAAC;EAMC;EAEHE,MAAMA,CAAA;IACJ,IAAI,IAAI,CAACL,IAAI,CAACM,OAAO,EAAE;IAEvB,IAAI,CAACR,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,KAAK,GAAG,EAAE;IAEf,MAAM;MAAEG,QAAQ;MAAEE;IAAQ,CAAE,GAAG,IAAI,CAACJ,IAAI,CAACO,KAAK;IAE9C,IAAI,CAACX,IAAI,CAACY,KAAK,CAACN,QAAS,EAAEE,QAAS,CAAC,CAACK,SAAS,CAAC;MAC9CC,IAAI,EAAGC,OAAqB,IAAI;QAC9B;QACA,MAAMC,KAAK,GAAGD,OAAO,EAAEC,KAAK;QAC5B,IAAI,CAACA,KAAK,EAAE;UACV,IAAI,CAACb,KAAK,GAAG,+BAA+B;UAC5C,IAAI,CAACD,OAAO,GAAG,KAAK;UACpB;QACF;QACA,IAAI,CAACF,IAAI,CAACiB,SAAS,CAACD,KAAK,CAAC;QAE1B,IAAI,CAACf,MAAM,CAACiB,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;MAC1C,CAAC;MACDf,KAAK,EAAEgB,GAAG,IAAG;QACX,IAAI,CAAChB,KAAK,GAAGgB,GAAG,EAAEhB,KAAK,EAAEiB,OAAO,IAAI,qBAAqB;QACzD,IAAI,CAAClB,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;;;uBAzCWL,cAAc,EAAAwB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;IAAA;EAAA;;;YAAd/B,cAAc;MAAAgC,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAAC,MAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}