{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PrescriptionService {\n  constructor(http) {\n    this.http = http;\n    this.base = `${environment.apiBase}/prescriptions`;\n  }\n  list(startDate, endDate, page = 0, size = 10) {\n    let params = new HttpParams().set('page', page).set('size', size);\n    if (startDate) params = params.set('startDate', startDate);\n    if (endDate) params = params.set('endDate', endDate);\n    return this.http.get(`${this.base}/list`, {\n      params\n    });\n  }\n  getById(id) {\n    return this.http.get(`${this.base}/${id}`);\n  }\n  create(dto) {\n    return this.http.post(`${this.base}/create`, dto);\n  }\n  update(id, dto) {\n    return this.http.put(`${this.base}/${id}`, dto);\n  }\n  delete(id) {\n    return this.http.delete(`${this.base}/${id}`);\n  }\n  static {\n    this.ɵfac = function PrescriptionService_Factory(t) {\n      return new (t || PrescriptionService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PrescriptionService,\n      factory: PrescriptionService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpParams","environment","PrescriptionService","constructor","http","base","apiBase","list","startDate","endDate","page","size","params","set","get","getById","id","create","dto","post","update","put","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\ASSIGNFRONTED\\cmed-prescription\\src\\app\\prescriptions\\prescription.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\nexport interface PrescriptionDTO {\n  id?: number;\n  prescriptionDate: string;\n  patientName: string;\n  patientAge: number;\n  patientGender: string;\n  diagnosis?: string;\n  medicines?: string;\n  nextVisitDate?: string | null;\n}\n\ninterface ApiResponse<T> { success:boolean; message:string; obj:T; count?:number; id?:number; }\n\n@Injectable({ providedIn: 'root' })\nexport class PrescriptionService {\n  base = `${environment.apiBase}/prescriptions`;\n  constructor(private http: HttpClient) {}\n\n  list(startDate?: string, endDate?: string, page=0, size=10){\n    let params = new HttpParams().set('page', page).set('size', size);\n    if (startDate) params = params.set('startDate', startDate);\n    if (endDate) params = params.set('endDate', endDate);\n    return this.http.get<ApiResponse<PrescriptionDTO[]>>(`${this.base}/list`, { params });\n  }\n  getById(id: number){ return this.http.get<ApiResponse<PrescriptionDTO>>(`${this.base}/${id}`); }\n  create(dto: PrescriptionDTO){ return this.http.post<ApiResponse<PrescriptionDTO>>(`${this.base}/create`, dto); }\n  update(id: number, dto: PrescriptionDTO){ return this.http.put<ApiResponse<PrescriptionDTO>>(`${this.base}/${id}`, dto); }\n  delete(id: number){ return this.http.delete<ApiResponse<number>>(`${this.base}/${id}`); }\n}\n"],"mappings":"AACA,SAAqBA,UAAU,QAAQ,sBAAsB;AAC7D,SAASC,WAAW,QAAQ,gCAAgC;;;AAgB5D,OAAM,MAAOC,mBAAmB;EAE9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,IAAI,GAAG,GAAGJ,WAAW,CAACK,OAAO,gBAAgB;EACN;EAEvCC,IAAIA,CAACC,SAAkB,EAAEC,OAAgB,EAAEC,IAAI,GAAC,CAAC,EAAEC,IAAI,GAAC,EAAE;IACxD,IAAIC,MAAM,GAAG,IAAIZ,UAAU,EAAE,CAACa,GAAG,CAAC,MAAM,EAAEH,IAAI,CAAC,CAACG,GAAG,CAAC,MAAM,EAAEF,IAAI,CAAC;IACjE,IAAIH,SAAS,EAAEI,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,WAAW,EAAEL,SAAS,CAAC;IAC1D,IAAIC,OAAO,EAAEG,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,SAAS,EAAEJ,OAAO,CAAC;IACpD,OAAO,IAAI,CAACL,IAAI,CAACU,GAAG,CAAiC,GAAG,IAAI,CAACT,IAAI,OAAO,EAAE;MAAEO;IAAM,CAAE,CAAC;EACvF;EACAG,OAAOA,CAACC,EAAU;IAAG,OAAO,IAAI,CAACZ,IAAI,CAACU,GAAG,CAA+B,GAAG,IAAI,CAACT,IAAI,IAAIW,EAAE,EAAE,CAAC;EAAE;EAC/FC,MAAMA,CAACC,GAAoB;IAAG,OAAO,IAAI,CAACd,IAAI,CAACe,IAAI,CAA+B,GAAG,IAAI,CAACd,IAAI,SAAS,EAAEa,GAAG,CAAC;EAAE;EAC/GE,MAAMA,CAACJ,EAAU,EAAEE,GAAoB;IAAG,OAAO,IAAI,CAACd,IAAI,CAACiB,GAAG,CAA+B,GAAG,IAAI,CAAChB,IAAI,IAAIW,EAAE,EAAE,EAAEE,GAAG,CAAC;EAAE;EACzHI,MAAMA,CAACN,EAAU;IAAG,OAAO,IAAI,CAACZ,IAAI,CAACkB,MAAM,CAAsB,GAAG,IAAI,CAACjB,IAAI,IAAIW,EAAE,EAAE,CAAC;EAAE;;;uBAb7Ed,mBAAmB,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAnBxB,mBAAmB;MAAAyB,OAAA,EAAnBzB,mBAAmB,CAAA0B,IAAA;MAAAC,UAAA,EADN;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}