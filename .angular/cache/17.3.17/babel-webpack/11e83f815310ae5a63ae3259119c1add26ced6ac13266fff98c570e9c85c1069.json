{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.tokenKey = 'jwt_token';\n  }\n  login(username, password) {\n    return this.http.post(`${environment.apiBase}/auth/login`, {\n      username,\n      password\n    });\n  }\n  saveToken(t) {\n    localStorage.setItem(this.tokenKey, t);\n  }\n  getToken() {\n    return localStorage.getItem(this.tokenKey);\n  }\n  isLoggedIn() {\n    return !!this.getToken();\n  }\n  logout() {\n    localStorage.removeItem(this.tokenKey);\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","AuthService","constructor","http","tokenKey","login","username","password","post","apiBase","saveToken","t","localStorage","setItem","getToken","getItem","isLoggedIn","logout","removeItem","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\ASSIGNFRONTED\\cmed-prescription\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private tokenKey = 'jwt_token';\n  constructor(private http: HttpClient) {}\n\n  login(username: string, password: string) {\n    return this.http.post<{token:string}>(`${environment.apiBase}/auth/login`, { username, password });\n  }\n\n  saveToken(t: string){ localStorage.setItem(this.tokenKey, t); }\n  getToken(){ return localStorage.getItem(this.tokenKey); }\n  isLoggedIn(){ return !!this.getToken(); }\n  logout(){ localStorage.removeItem(this.tokenKey); }\n}\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,gCAAgC;;;AAG5D,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,QAAQ,GAAG,WAAW;EACS;EAEvCC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAiB,GAAGR,WAAW,CAACS,OAAO,aAAa,EAAE;MAAEH,QAAQ;MAAEC;IAAQ,CAAE,CAAC;EACpG;EAEAG,SAASA,CAACC,CAAS;IAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACT,QAAQ,EAAEO,CAAC,CAAC;EAAE;EAC9DG,QAAQA,CAAA;IAAI,OAAOF,YAAY,CAACG,OAAO,CAAC,IAAI,CAACX,QAAQ,CAAC;EAAE;EACxDY,UAAUA,CAAA;IAAI,OAAO,CAAC,CAAC,IAAI,CAACF,QAAQ,EAAE;EAAE;EACxCG,MAAMA,CAAA;IAAIL,YAAY,CAACM,UAAU,CAAC,IAAI,CAACd,QAAQ,CAAC;EAAE;;;uBAXvCH,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXrB,WAAW;MAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;MAAAC,UAAA,EADE;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}