{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../rx.service\";\nexport class RxInteractionsComponent {\n  constructor(rx) {\n    this.rx = rx;\n    this.rxcui = '341248';\n    this.loading = false;\n    this.error = '';\n    this.rows = [];\n  }\n  fetch() {\n    if (!this.rxcui?.trim()) {\n      this.error = 'Please enter an RXCUI';\n      return;\n    }\n    this.loading = true;\n    this.error = '';\n    this.rows = [];\n    this.rx.getInteractions(this.rxcui).subscribe({\n      next: data => {\n        try {\n          const groups = data?.interactionTypeGroup ?? [];\n          const rows = [];\n          for (const g of groups) {\n            for (const t of g.interactionType ?? []) {\n              for (const p of t.interactionPair ?? []) {\n                const drugNames = (p.interactionConcept ?? []).map(c => c?.minConceptItem?.name).filter(x => !!x).join(' + ');\n                const desc = p?.description ?? '';\n                rows.push({\n                  drug: drugNames,\n                  description: desc\n                });\n              }\n            }\n          }\n          this.rows = rows;\n        } catch {\n          this.error = 'Unexpected response format';\n        }\n        this.loading = false;\n      },\n      error: err => {\n        this.error = err?.error?.message || 'Failed to load interactions';\n        this.loading = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function RxInteractionsComponent_Factory(t) {\n      return new (t || RxInteractionsComponent)(i0.ɵɵdirectiveInject(i1.RxService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RxInteractionsComponent,\n      selectors: [[\"app-rx-interactions\"]],\n      decls: 0,\n      vars: 0,\n      template: function RxInteractionsComponent_Template(rf, ctx) {},\n      styles: [\".toolbar[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 12px;\\n  align-items: center;\\n  margin: 12px 0;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcngvcngtaW50ZXJhY3Rpb25zL3J4LWludGVyYWN0aW9ucy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUFTLGFBQUE7RUFBYSxTQUFBO0VBQVMsbUJBQUE7RUFBbUIsY0FBQTtBQUtsRCIsInNvdXJjZXNDb250ZW50IjpbIi50b29sYmFye2Rpc3BsYXk6ZmxleDtnYXA6MTJweDthbGlnbi1pdGVtczpjZW50ZXI7bWFyZ2luOjEycHggMH1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["RxInteractionsComponent","constructor","rx","rxcui","loading","error","rows","fetch","trim","getInteractions","subscribe","next","data","groups","interactionTypeGroup","g","t","interactionType","p","interactionPair","drugNames","interactionConcept","map","c","minConceptItem","name","filter","x","join","desc","description","push","drug","err","message","i0","ɵɵdirectiveInject","i1","RxService","selectors","decls","vars","template","RxInteractionsComponent_Template","rf","ctx","styles"],"sources":["D:\\ASSIGNFRONTED\\cmed-prescription\\src\\app\\rx\\rx-interactions\\rx-interactions.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { RxService } from '../rx.service';\n\n@Component({\n  selector: 'app-rx-interactions',\n  templateUrl: './rx-interactions.component.html',\n  styleUrls: ['./rx-interactions.component.scss']\n})\nexport class RxInteractionsComponent {\n  rxcui = '341248';\n  loading = false;\n  error = '';\n  rows: { drug: string; description: string }[] = [];\n\n  constructor(private rx: RxService) {}\n\n  fetch() {\n    if (!this.rxcui?.trim()) {\n      this.error = 'Please enter an RXCUI';\n      return;\n    }\n\n    this.loading = true; this.error = ''; this.rows = [];\n    this.rx.getInteractions(this.rxcui).subscribe({\n      next: (data) => {\n        try {\n          const groups = data?.interactionTypeGroup ?? [];\n          const rows: any[] = [];\n          for (const g of groups) {\n            for (const t of (g.interactionType ?? [])) {\n              for (const p of (t.interactionPair ?? [])) {\n                const drugNames = (p.interactionConcept ?? [])\n                  .map((c: any) => c?.minConceptItem?.name)\n                  .filter((x: any) => !!x)\n                  .join(' + ');\n                const desc = p?.description ?? '';\n                rows.push({ drug: drugNames, description: desc });\n              }\n            }\n          }\n          this.rows = rows;\n        } catch {\n          this.error = 'Unexpected response format';\n        }\n        this.loading = false;\n      },\n      error: (err) => {\n        this.error = err?.error?.message || 'Failed to load interactions';\n        this.loading = false;\n      }\n    });\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,uBAAuB;EAMlCC,YAAoBC,EAAa;IAAb,KAAAA,EAAE,GAAFA,EAAE;IALtB,KAAAC,KAAK,GAAG,QAAQ;IAChB,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,KAAK,GAAG,EAAE;IACV,KAAAC,IAAI,GAA4C,EAAE;EAEd;EAEpCC,KAAKA,CAAA;IACH,IAAI,CAAC,IAAI,CAACJ,KAAK,EAAEK,IAAI,EAAE,EAAE;MACvB,IAAI,CAACH,KAAK,GAAG,uBAAuB;MACpC;IACF;IAEA,IAAI,CAACD,OAAO,GAAG,IAAI;IAAE,IAAI,CAACC,KAAK,GAAG,EAAE;IAAE,IAAI,CAACC,IAAI,GAAG,EAAE;IACpD,IAAI,CAACJ,EAAE,CAACO,eAAe,CAAC,IAAI,CAACN,KAAK,CAAC,CAACO,SAAS,CAAC;MAC5CC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI;UACF,MAAMC,MAAM,GAAGD,IAAI,EAAEE,oBAAoB,IAAI,EAAE;UAC/C,MAAMR,IAAI,GAAU,EAAE;UACtB,KAAK,MAAMS,CAAC,IAAIF,MAAM,EAAE;YACtB,KAAK,MAAMG,CAAC,IAAKD,CAAC,CAACE,eAAe,IAAI,EAAE,EAAG;cACzC,KAAK,MAAMC,CAAC,IAAKF,CAAC,CAACG,eAAe,IAAI,EAAE,EAAG;gBACzC,MAAMC,SAAS,GAAG,CAACF,CAAC,CAACG,kBAAkB,IAAI,EAAE,EAC1CC,GAAG,CAAEC,CAAM,IAAKA,CAAC,EAAEC,cAAc,EAAEC,IAAI,CAAC,CACxCC,MAAM,CAAEC,CAAM,IAAK,CAAC,CAACA,CAAC,CAAC,CACvBC,IAAI,CAAC,KAAK,CAAC;gBACd,MAAMC,IAAI,GAAGX,CAAC,EAAEY,WAAW,IAAI,EAAE;gBACjCxB,IAAI,CAACyB,IAAI,CAAC;kBAAEC,IAAI,EAAEZ,SAAS;kBAAEU,WAAW,EAAED;gBAAI,CAAE,CAAC;cACnD;YACF;UACF;UACA,IAAI,CAACvB,IAAI,GAAGA,IAAI;QAClB,CAAC,CAAC,MAAM;UACN,IAAI,CAACD,KAAK,GAAG,4BAA4B;QAC3C;QACA,IAAI,CAACD,OAAO,GAAG,KAAK;MACtB,CAAC;MACDC,KAAK,EAAG4B,GAAG,IAAI;QACb,IAAI,CAAC5B,KAAK,GAAG4B,GAAG,EAAE5B,KAAK,EAAE6B,OAAO,IAAI,6BAA6B;QACjE,IAAI,CAAC9B,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;;;uBA3CWJ,uBAAuB,EAAAmC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,SAAA;IAAA;EAAA;;;YAAvBtC,uBAAuB;MAAAuC,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;MAAAC,MAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}